@page "/Empleados/Ventas/ventasClientes"
@using Reciplas.Models;
@inject NotificationService NotificationService 
@inherits OwningComponentBase<Usuario>
@using System.Collections.Generic;  
@inject DialogService DialogService   
@inject NavigationManager NavigationManager


<PageTitle>Areas</PageTitle>
<TituloPrincipal TextoPrincipal="Ventas" TextoSecundario="Clientes" />
 
  

<CListado TItem="Models.Cliente" Data="@clientes">
       <Columns>
        <RadzenDataGridColumn TItem=" Models.Cliente" TextAlign="TextAlign.Center"  Property="Nombre" Title="Nombre" Width="80px" />
        <RadzenDataGridColumn TItem="Models.Cliente" TextAlign="TextAlign.Center"  Property="Direccion" Title="Direcci&oacute;n" Width="80px"/>
        <RadzenDataGridColumn TItem=" Models.Cliente" TextAlign="TextAlign.Center" Property="DNI" Title="DNI" Width="80px"/> 
        <RadzenDataGridColumn TItem=" Models.Cliente" TextAlign="TextAlign.Center" Property="Telefono" Title="Telef&oacute;no" Width="50px"/> 
        <RadzenDataGridColumn TItem=" Models.Cliente" TextAlign="TextAlign.Center"  Title="Pedidos" Width="60px">
            <Template Context="item">
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/PedidosDetalles"))" TextAlign="TextAlign.Center" Icon="list" ButtonStyle="ButtonStyle.Success" Style="margin-left: 5px" />
                <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/AgregarPedidoCliente"))" TextAlign="TextAlign.Center" Icon="add_circle_outline" Color="Color.Warning" Style="margin-left: 5px" />
                <RadzenButton Click="@(args => QuitarAdjunto(item.Id))" TextAlign="TextAlign.Center" Icon="delete" ButtonStyle="ButtonStyle.Danger"Style="margin-left: 5px" /> 
            </Template>
        </RadzenDataGridColumn>  
        <RadzenDataGridColumn TItem=" Models.Cliente" Title="Ventas" Width="80px" Context="clientes" Filterable="false" Sortable="false">
            <Template Context="data"> 
                <RadzenButton Style="margin-left: 15px" Variant="Variant.Outlined" Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/FacturarVentaCliente"))"  Icon="add_shopping_cart"/>
  
                <RadzenCheckBox Style="margin-left: 25px" @bind-Value=@data.PerfilAprobacion TValue="bool" Name=@($"CheckBoxNro{data.Id}")
                    Disabled="true" />
                <RadzenLabel Text="@(data.PerfilAprobacion ? "Finalizo" : "No Finalizo")" Component=@($"CheckBoxNro{data.Id}") /> 
            </Template>
        </RadzenDataGridColumn> 
         
</Columns>  
</CListado> 
<br> 
<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
   <RadzenButton Click="@(args => NavigationManager.NavigateTo("/Empleados/Ventas/ClienteFormulario"))" Text="Nuevo" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" />
    <RadzenButton Click=@(() => EmployeeIDVisible = !EmployeeIDVisible) Text="Modificar" Icon="check_circle" ButtonStyle="ButtonStyle.Success"  />
    <RadzenButton Click=@(() => EmployeeIDVisible = !EmployeeIDVisible) Text="Eliminar"  Icon="report" ButtonStyle="ButtonStyle.Danger" />
</RadzenStack>
<br> 

@code {
    IEnumerable<Models.Cliente> clientes;   
    protected bool cargando = true;    
    bool value;
    [Parameter] public bool SoloLectura { get; set; } = true;
    [Parameter] public string Nombre {get; set;}
    [Parameter] public string Direccion {get; set;}
    [Parameter] public int DNI {get; set;} 
    [Parameter] public int Telefono {get; set;}  


    bool EmployeeIDVisible = false; 

    private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Button Clicked", Detail = text });
    }
  protected async Task QuitarAdjunto(int id)
    {
      //
    }
    private int _count;
    protected override Task OnInitializedAsync()
    {
        List<Models.Cliente> persons = new List<Models.Cliente>();
        var person1 = new Models.Cliente {Nombre = "Chiara Musmann", Direccion = "Calle gualaby 42 Sydney", Telefono =4123456, DNI=12398745, PerfilAprobacion=true};
        var person2 = new Models.Cliente {Nombre = "Nahia Orgo√±", Direccion = "French 414", Telefono =4789456, DNI=45646587, PerfilAprobacion=true};
        var person3 = new Models.Cliente {Nombre = "Valen Sosa", Direccion = "Av. Sarmiento", Telefono =4562316, DNI=78912356, PerfilAprobacion=true};
        var person4 = new Models.Cliente {Nombre = "Mariano Gomez", Direccion = "Calle importante", Telefono =4987464, DNI=456547986, PerfilAprobacion=false};
        var person5 = new Models.Cliente {Nombre = "Leandro Espindola", Direccion = "NI idea", Telefono =4158726, DNI=451239876, PerfilAprobacion=true};
        var person6 = new Models.Cliente {Nombre = "Bibiana  Gonzalez", Direccion = "ejemplo 6", Telefono =4341897, DNI=46541356, PerfilAprobacion=false};
        var person7 = new Models.Cliente {Nombre = "Mateo Altamirano", Direccion = "otra calle importante", Telefono =4786131, DNI=454563126, PerfilAprobacion=false};

        persons.Add(person1);
        persons.Add(person2);
        persons.Add(person3);
        persons.Add(person4);
        persons.Add(person5);
        persons.Add(person6);
        persons.Add(person7);

        clientes = persons;
        _count = persons.Count;

        return base.OnInitializedAsync();
    }

}

